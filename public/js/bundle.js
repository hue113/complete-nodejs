(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){const hideAlert=()=>{const el=document.querySelector(".alert");if(el)el.parentElement.removeChild(el)};module.exports.showAlert=(type,msg)=>{hideAlert();const markup=`<div class="alert alert--${type}">${msg}</div>`;document.querySelector("body").insertAdjacentHTML("afterbegin",markup);window.setTimeout(hideAlert,5e3)}},{}],2:[function(require,module,exports){const{login:login,logout:logout}=require("./login.js");const{updateSettings:updateSettings}=require("./update");const{bookTour:bookTour}=require("./stripe.js");const loginForm=document.querySelector(".form--login");if(loginForm)loginForm.addEventListener("submit",e=>{e.preventDefault();const email=document.getElementById("email").value;const password=document.getElementById("password").value;login(email,password)});const logOutBtn=document.querySelector(".nav__el--logout");if(logOutBtn)logOutBtn.addEventListener("click",logout);const userDataForm=document.querySelector(".form-user-data");if(userDataForm){userDataForm.addEventListener("submit",e=>{e.preventDefault();const form=new FormData;form.append("name",document.getElementById("name").value);form.append("email",document.getElementById("email").value);form.append("photo",document.getElementById("photo").files[0]);console.log(form);updateSettings(form,"data")})}const userPasswordForm=document.querySelector(".form-user-password");if(userPasswordForm){userPasswordForm.addEventListener("submit",async e=>{e.preventDefault();document.querySelector(".btn--save-password").textContent="Updating...";const passwordCurrent=document.getElementById("password-current").value;const password=document.getElementById("password").value;const passwordConfirm=document.getElementById("password-confirm").value;await updateSettings({passwordCurrent:passwordCurrent,password:password,passwordConfirm:passwordConfirm},"password");document.querySelector(".btn--save-password").textContent="Save password";document.getElementById("password-current").value="";document.getElementById("password").value="";document.getElementById("password-confirm").value=""})}const bookBtn=document.getElementById("book-tour");if(bookBtn)bookBtn.addEventListener("click",e=>{e.target.textContent="Processing...";const{tourId:tourId}=e.target.dataset;bookTour(tourId)});const alertMessage=document.querySelector("body").dataset.alert;if(alertMessage)showAlert("success",alertMessage,20)},{"./login.js":3,"./stripe.js":4,"./update":5}],3:[function(require,module,exports){const{showAlert:showAlert}=require("./alerts");module.exports.login=async(email,password)=>{try{const res=await axios({method:"POST",url:"/api/v1/users/login",data:{email:email,password:password}});if(res.data.status==="success"){showAlert("success","Logged in successfully!");window.setTimeout(()=>{location.assign("/")},1e3)}}catch(err){showAlert("error",err.response.data.message)}};module.exports.logout=async()=>{try{const res=await axios({method:"GET",url:"/api/v1/users/logout"});if(res.data.status==="success"){location.reload();location.assign("/login")}}catch(err){showAlert("error","Error logging out! Try again.")}}},{"./alerts":1}],4:[function(require,module,exports){const{showAlert:showAlert}=require("./alerts");const stripe=Stripe("pk.eyJ1IjoiaHVlcHQ5MiIsImEiOiJja2tzejZuMDgwY3Q4Mndxb3ZhcndvbjdyIn0.95arHl19VG6HRTnTF25L5g");module.exports.bookTour=async tourId=>{try{const session=await axios(`/api/v1/bookings/checkout-session/${tourId}`);await stripe.redirectToCheckout({sessionId:session.data.session.id})}catch(err){console.log(err);showAlert("error",err)}}},{"./alerts":1}],5:[function(require,module,exports){const{showAlert:showAlert}=require("./alerts");module.exports.updateSettings=async(data,type)=>{try{const url=type==="password"?"/api/v1/users/updateMyPassword":"/api/v1/users/updateMe";const res=await axios({method:"PATCH",url:url,data:data});if(res.data.status==="success"){showAlert("success",`${type.toUpperCase()} updated successfully!`)}}catch(err){showAlert("error",err.response.data.message)}}},{"./alerts":1}]},{},[2]);
